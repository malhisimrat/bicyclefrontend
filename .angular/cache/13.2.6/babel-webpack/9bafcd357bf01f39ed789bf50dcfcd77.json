{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\malhi\\\\Desktop\\\\6 Month Training\\\\Websites\\\\MEAN\\\\bicycle-on-rent-mean-main\\\\bicycle-on-rent-mean-main\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./renter-bicycle-request.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./renter-bicycle-request.component.css?ngResource\";\nimport { Component, Inject } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AdminauthService } from 'src/app/shared/adminauth/adminauth.service';\nimport { BicycleRequestService } from 'src/app/shared/bicycle-request/bicycle-request.service';\nimport Swal from 'sweetalert2';\nlet RenterBicycleRequestComponent = class RenterBicycleRequestComponent {\n  constructor(bicycle, spinner, sanitizer, _imageurl, adminauth) {\n    this.bicycle = bicycle;\n    this.spinner = spinner;\n    this.sanitizer = sanitizer;\n    this.adminauth = adminauth;\n    this.imageurl = _imageurl;\n  }\n\n  ngOnInit() {\n    // console.log(this.adminauth.getadminid())\n    this.getall({\n      'renterId': this.adminauth.getadminid()\n    });\n  }\n\n  getimagepath(image) {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(this.imageurl + image);\n  }\n\n  getall(data) {\n    this.spinner.show();\n    this.bicycle.getall(data).subscribe({\n      next: res => {\n        this.spinner.hide();\n        this.data = res.data;\n      },\n      error: err => {\n        this.spinner.hide();\n      }\n    });\n  }\n\n  changedatetime(timestamp) {\n    var split_dt = timestamp.split('T');\n    var split_time = split_dt[1].split('.'); // console.log(split_time)\n\n    return split_dt[0] + \" \" + split_time[0];\n  }\n\n  pickup(id, status) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        value: text\n      } = yield Swal.fire({\n        input: 'textarea',\n        inputLabel: 'Message',\n        inputPlaceholder: 'Type your message here...',\n        inputAttributes: {\n          'aria-label': 'Type your message here'\n        },\n        showCancelButton: true\n      });\n\n      if (text) {\n        // Swal.fire(text)\n        _this.changeStatus(id, status, text);\n      }\n    })();\n  }\n\n  changeStatus(id, status, pickup) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes!'\n    }).then(result => {\n      if (result.isConfirmed) {\n        this.bicycle.update({\n          '_id': id,\n          'requestStatus': status,\n          'pickUpDescription': pickup\n        }).subscribe({\n          next: res => {\n            // console.log(res)\n            Swal.fire('Success!', 'Your request status has been chnaged.', 'success');\n            this.getall({\n              'renterId': this.adminauth.getadminid()\n            });\n          },\n          error: err => {\n            // console.log(err)\n            Swal.fire('Error!', 'Try after some time.', 'error');\n          }\n        });\n      }\n    });\n  }\n\n};\n\nRenterBicycleRequestComponent.ctorParameters = () => [{\n  type: BicycleRequestService\n}, {\n  type: NgxSpinnerService\n}, {\n  type: DomSanitizer\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: ['imageurl']\n  }]\n}, {\n  type: AdminauthService\n}];\n\nRenterBicycleRequestComponent = __decorate([Component({\n  selector: 'app-renter-bicycle-request',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], RenterBicycleRequestComponent);\nexport { RenterBicycleRequestComponent };","map":{"version":3,"sources":["C:/Users/malhi/Desktop/6 Month Training/Websites/MEAN/bicycle-on-rent-mean-main/bicycle-on-rent-mean-main/frontend/src/app/user/renter-bicycle-request/renter-bicycle-request.component.ts"],"names":["__decorate","__NG_CLI_RESOURCE__0","__NG_CLI_RESOURCE__1","Component","Inject","DomSanitizer","NgxSpinnerService","AdminauthService","BicycleRequestService","Swal","RenterBicycleRequestComponent","constructor","bicycle","spinner","sanitizer","_imageurl","adminauth","imageurl","ngOnInit","getall","getadminid","getimagepath","image","bypassSecurityTrustResourceUrl","data","show","subscribe","next","res","hide","error","err","changedatetime","timestamp","split_dt","split","split_time","pickup","id","status","value","text","fire","input","inputLabel","inputPlaceholder","inputAttributes","showCancelButton","changeStatus","title","icon","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","update","ctorParameters","type","undefined","decorators","args","selector","template","styles"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport __NG_CLI_RESOURCE__0 from \"./renter-bicycle-request.component.html?ngResource\";\r\nimport __NG_CLI_RESOURCE__1 from \"./renter-bicycle-request.component.css?ngResource\";\r\nimport { Component, Inject } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { AdminauthService } from 'src/app/shared/adminauth/adminauth.service';\r\nimport { BicycleRequestService } from 'src/app/shared/bicycle-request/bicycle-request.service';\r\nimport Swal from 'sweetalert2';\r\nlet RenterBicycleRequestComponent = class RenterBicycleRequestComponent {\r\n    constructor(bicycle, spinner, sanitizer, _imageurl, adminauth) {\r\n        this.bicycle = bicycle;\r\n        this.spinner = spinner;\r\n        this.sanitizer = sanitizer;\r\n        this.adminauth = adminauth;\r\n        this.imageurl = _imageurl;\r\n    }\r\n    ngOnInit() {\r\n        // console.log(this.adminauth.getadminid())\r\n        this.getall({ 'renterId': this.adminauth.getadminid() });\r\n    }\r\n    getimagepath(image) {\r\n        return this.sanitizer.bypassSecurityTrustResourceUrl(this.imageurl + image);\r\n    }\r\n    getall(data) {\r\n        this.spinner.show();\r\n        this.bicycle.getall(data).subscribe({\r\n            next: (res) => {\r\n                this.spinner.hide();\r\n                this.data = res.data;\r\n            },\r\n            error: (err) => {\r\n                this.spinner.hide();\r\n            }\r\n        });\r\n    }\r\n    changedatetime(timestamp) {\r\n        var split_dt = timestamp.split('T');\r\n        var split_time = split_dt[1].split('.');\r\n        // console.log(split_time)\r\n        return split_dt[0] + \" \" + split_time[0];\r\n    }\r\n    async pickup(id, status) {\r\n        const { value: text } = await Swal.fire({\r\n            input: 'textarea',\r\n            inputLabel: 'Message',\r\n            inputPlaceholder: 'Type your message here...',\r\n            inputAttributes: {\r\n                'aria-label': 'Type your message here'\r\n            },\r\n            showCancelButton: true\r\n        });\r\n        if (text) {\r\n            // Swal.fire(text)\r\n            this.changeStatus(id, status, text);\r\n        }\r\n    }\r\n    changeStatus(id, status, pickup) {\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes!'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                this.bicycle.update({ '_id': id, 'requestStatus': status, 'pickUpDescription': pickup }).subscribe({\r\n                    next: (res) => {\r\n                        // console.log(res)\r\n                        Swal.fire('Success!', 'Your request status has been chnaged.', 'success');\r\n                        this.getall({ 'renterId': this.adminauth.getadminid() });\r\n                    },\r\n                    error: (err) => {\r\n                        // console.log(err)\r\n                        Swal.fire('Error!', 'Try after some time.', 'error');\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n};\r\nRenterBicycleRequestComponent.ctorParameters = () => [\r\n    { type: BicycleRequestService },\r\n    { type: NgxSpinnerService },\r\n    { type: DomSanitizer },\r\n    { type: undefined, decorators: [{ type: Inject, args: ['imageurl',] }] },\r\n    { type: AdminauthService }\r\n];\r\nRenterBicycleRequestComponent = __decorate([\r\n    Component({\r\n        selector: 'app-renter-bicycle-request',\r\n        template: __NG_CLI_RESOURCE__0,\r\n        styles: [__NG_CLI_RESOURCE__1]\r\n    })\r\n], RenterBicycleRequestComponent);\r\nexport { RenterBicycleRequestComponent };\r\n"]},"metadata":{},"sourceType":"module"}