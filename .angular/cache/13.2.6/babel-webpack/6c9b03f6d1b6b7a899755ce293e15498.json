{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nimport * as i2 from \"ngx-spinner\";\nimport * as i3 from \"../shared/contact/contact.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\n\nfunction ContactComponent_span_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"Required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContactComponent_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"Required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContactComponent_span_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"Required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContactComponent_span_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"Required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ContactComponent = /*#__PURE__*/(() => {\n  class ContactComponent {\n    constructor(toastr, spinner, contact) {\n      this.toastr = toastr;\n      this.spinner = spinner;\n      this.contact = contact;\n      this.addForm = new FormGroup({\n        'name': new FormControl('', Validators.required),\n        'email': new FormControl('', [Validators.required, Validators.email]),\n        'subject': new FormControl('', Validators.required),\n        'message': new FormControl('', Validators.required)\n      });\n    }\n\n    ngOnInit() {\n      this.spinner.show();\n      setTimeout(() => {\n        this.spinner.hide();\n      }, 500);\n    }\n\n    submit() {\n      this.spinner.show();\n      this.contact.add(this.addForm.value).subscribe({\n        next: res => {\n          this.spinner.hide();\n\n          if (res.success) {\n            this.toastr.success(res.message);\n            this.addForm.reset();\n          } else {\n            this.toastr.error(res.message);\n          }\n        },\n        error: () => {\n          this.spinner.hide();\n          this.toastr.error('Server Error');\n        }\n      });\n    }\n\n  }\n\n  ContactComponent.ɵfac = function ContactComponent_Factory(t) {\n    return new (t || ContactComponent)(i0.ɵɵdirectiveInject(i1.ToastrService), i0.ɵɵdirectiveInject(i2.NgxSpinnerService), i0.ɵɵdirectiveInject(i3.ContactService));\n  };\n\n  ContactComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContactComponent,\n    selectors: [[\"app-contact\"]],\n    decls: 32,\n    vars: 6,\n    consts: [[\"type\", \"ball-scale-multiple\"], [1, \"contact-form\"], [1, \"container\"], [1, \"contact-heading\"], [\"id\", \"contact\", 3, \"formGroup\"], [\"for\", \"name\"], [\"placeholder\", \"Your name\", \"formControlName\", \"name\", \"type\", \"text\", \"required\", \"\", \"autofocus\", \"\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"email\"], [\"placeholder\", \"Your Email Address\", \"formControlName\", \"email\", \"type\", \"email\", \"required\", \"\"], [\"for\", \"title\"], [\"placeholder\", \"Title\", \"type\", \"text\", \"formControlName\", \"subject\", \"required\", \"\"], [\"for\", \"message\"], [\"placeholder\", \"Type your message here....\", \"formControlName\", \"message\", \"required\", \"\"], [\"type\", \"button\", 1, \"btn\", \"btn-warning\", 3, \"disabled\", \"click\"], [1, \"text-danger\"]],\n    template: function ContactComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"ngx-spinner\", 0);\n        i0.ɵɵelementStart(1, \"section\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\");\n        i0.ɵɵtext(5, \"Contact Us\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"form\", 4)(7, \"h3\");\n        i0.ɵɵtext(8, \"Leave your query here\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"fieldset\")(10, \"label\", 5);\n        i0.ɵɵtext(11, \"Name*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 6);\n        i0.ɵɵtemplate(13, ContactComponent_span_13_Template, 2, 0, \"span\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"fieldset\")(15, \"label\", 8);\n        i0.ɵɵtext(16, \"Email*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 9);\n        i0.ɵɵtemplate(18, ContactComponent_span_18_Template, 2, 0, \"span\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"fieldset\")(20, \"label\", 10);\n        i0.ɵɵtext(21, \"Title*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 11);\n        i0.ɵɵtemplate(23, ContactComponent_span_23_Template, 2, 0, \"span\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"fieldset\")(25, \"label\", 12);\n        i0.ɵɵtext(26, \"Message*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"textarea\", 13);\n        i0.ɵɵtemplate(28, ContactComponent_span_28_Template, 2, 0, \"span\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"fieldset\")(30, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function ContactComponent_Template_button_click_30_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵtext(31, \"Submit\");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.addForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.addForm.controls[\"name\"].invalid && ctx.addForm.controls[\"name\"].touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.addForm.controls[\"email\"].invalid && ctx.addForm.controls[\"email\"].touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.addForm.controls[\"subject\"].invalid && ctx.addForm.controls[\"subject\"].touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.addForm.controls[\"message\"].invalid && ctx.addForm.controls[\"message\"].touched);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.addForm.invalid);\n      }\n    },\n    directives: [i2.NgxSpinnerComponent, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlName, i4.RequiredValidator, i5.NgIf],\n    styles: [\"\"]\n  });\n  return ContactComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}